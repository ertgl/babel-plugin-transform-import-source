name: Setup CI
description: Setup CI environment

inputs:
  build-cache-key:
    description: 'Cache key for the build'
    required: false
    default: ''
  cache-build:
    description: 'Should cache the build'
    required: false
    default: 'true'
  restore-build-cache:
    description: 'Should restore the build cache'
    required: false
    default: 'true'

outputs:
  final-build-cache-key:
    description: 'The final build cache key'
    value: ${{ steps.determine-build-cache-key.outputs.final-build-cache-key }}

runs:
  using: composite
  steps:
    - name: Determine build cache key
      id: determine-build-cache-key
      shell: bash
      env:
        FINAL_BUILD_CACHE_KEY: ${{ inputs.build-cache-key || format('build-cache-{0}-{1}', runner.os, hashFiles('yarn.lock', 'dist/**/*')) }}
      run: echo "final-build-cache-key=$(echo "$FINAL_BUILD_CACHE_KEY")" >> $GITHUB_OUTPUT

    - name: Setup Node.js LTS
      uses: actions/setup-node@v4
      with:
        node-version: lts/*
        cache: 'yarn'
        registry-url: 'https://registry.npmjs.org'

    - name: Restore build cache
      id: restore-build-cache
      if: ${{ inputs.restore-build-cache == 'true' }}
      uses: actions/cache/restore@v4
      with:
        path: dist
        key: ${{ steps.determine-build-cache-key.outputs.final-build-cache-key }}

    - name: Install dependencies
      if: ${{ steps.restore-build-cache.outputs.cache-hit != 'true' }}
      shell: bash
      run: yarn install --immutable

    - name: Prepare
      if: ${{ steps.restore-build-cache.outputs.cache-hit != 'true' }}
      shell: bash
      run: yarn prepare

    - name: Bootstrap
      if: steps.restore-build-cache.outputs.cache-hit != 'true'
      shell: bash
      run: yarn bootstrap

    - name: Build CJS
      if: steps.restore-build-cache.outputs.cache-hit != 'true'
      shell: bash
      run: yarn build::cjs

    - name: Build ESM
      if: steps.restore-build-cache.outputs.cache-hit != 'true'
      shell: bash
      run: yarn build::esm

    - name: Build types
      if: steps.restore-build-cache.outputs.cache-hit != 'true'
      shell: bash
      run: yarn build::types

    - name: Cache build
      id: cache-build
      if: ${{ inputs.cache-build == 'true' }}
      uses: actions/cache/save@v4
      with:
        path: dist
        key: ${{ steps.determine-build-cache-key.outputs.final-build-cache-key }}
